{"version":3,"file":"socialmod.js","mappings":"SAAA;SACA;;;;;UCDA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQA,IAAM,OAAO,GAAG,qBAAqB;AACrC,IAAM,iBAAiB,GAAG,4CAA4C,CAAC;AACvE,IAAM,mBAAmB,GAAG,2CAA2C,CAAC;AAExE,IAAM,WAAW,GAAG,iHAAiH,CAAC;AAE/H,SAAS,OAAO;IACnB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;IAC5B,IAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;IAC7E,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACzC,CAAC;AAGD,MAAM,CAAC,MAAM,GAAG;;;;;gBACZ,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;;;gBAKxB,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAC;gBACpC,SAAS,GAAG,OAAO,EAAE,CAAC;gBACT,WAAM,KAAK,CACxB,iBAAiB,EACjB;wBACI,MAAM,EAAE,MAAM;wBACd,OAAO,EAAE;4BACL,eAAe,EAAE,WAAW;4BAC5B,cAAc,EAAE,SAAS;4BACzB,cAAc,EAAE,mCAAmC;4BACnD,uBAAuB,EAAE,KAAK;4BAC9B,2BAA2B,EAAE,IAAI;4BACjC,qBAAqB,EAAE,eAAe;4BACtC,yBAAyB,EAAE,gGAAgG;yBAC9H;wBACD,WAAW,EAAE,SAAS;wBAItB,IAAI,EAAE,UAAU,GAAG,OAAO;qBAC7B,CACJ;;gBAnBK,QAAQ,GAAG,SAmBhB;qBACG,SAAQ,CAAC,MAAM,KAAK,GAAG,GAAvB,cAAuB;gBACZ,WAAM,QAAQ,CAAC,IAAI,EAAE;;gBAA5B,IAAI,GAAG,SAAqB;gBAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;gBACf,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;oBACjC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,OAAO,CAAC,CAAC;gBAC9C,CAAC;;;;;gBAED,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;;;;;KAEtB","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./X/block.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\n// # Twitter handle to user-id convertor:\r\n// https://www.mediamister.com/find-twitter-user-id\r\n\r\n// Instructions for setting up Visual Code for Browser Extension Development:\r\n// https://code.visualstudio.com/docs/nodejs/browser-debugging\r\n// https://code.visualstudio.com/Docs/languages/typescript\r\n\r\n// 'Login' API call: https://api.x.com/1.1/onboarding/task.json\r\n// @EndWokeness: 1552795969959636992\r\n\r\n// import RequestDiscoverer from '../lib/RequestJwtDiscoverer.ts';\r\n// import Store from '../lib/store.ts';\r\n\r\nconst user_id = '1552795969959636992'\r\nconst block_endpointURL = 'https://x.com/i/api/1.1/blocks/create.json';\r\nconst unblock_endpointURL = 'https://api.x.com/1.1/blocks/destroy.json';\r\n\r\nconst publicToken = 'Bearer AAAAAAAAAAAAAAAAAAAAANRILgAAAAAAnNwIzUejRCOuH5E6I8xnZz4puTs%3D1Zv7ttfk8LF81IUq16cHjhLTvJu4FA33AGWWjCpTnA';\r\n\r\nexport function getCsrf() {\r\n    console.log(\"Getting CSRF!\")\r\n    let csrfToken = document.cookie.match(/(?:^|;\\s*)ct0=([0-9a-f]+)\\s*(?:;|$)/);\r\n    return csrfToken ? csrfToken[1] : \"\";\r\n}\r\n\r\n\r\nwindow.onload = async () => {\r\n    console.log('Page loaded!');\r\n\r\n    // let store = new Store();\r\n    // let disc = new RequestDiscoverer(store);\r\n    try {\r\n        console.log('URL:' + block_endpointURL);\r\n        let csrfToken = getCsrf();\r\n        const response = await fetch(\r\n            block_endpointURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'authorization': publicToken,\r\n                    'X-Csrf-Token': csrfToken,\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'X-Twitter-Active-User': 'yes',\r\n                    'X-Twitter-Client-Language': 'en',\r\n                    'X-Twitter-Auth-Type': 'OAuth2Session',\r\n                    'X-Client-Transaction-Id': 'KV4OduB1PqQNoxbExJyKFtDSytBfTlHocq8hsUUkVw8XZyCSL9nSW7gFREuEoAmQPpqDtyu9M+SmxHEPnFnviUAGC9qsKg'\r\n                },\r\n                credentials: 'include',\r\n                // Twitter POST body is plain text instead of form urlencoded\r\n                // body: 'user_id=245963716'\r\n                // body: 'screen_name=?EndWokeness'\r\n                body: 'user_id=' + user_id\r\n            }\r\n        );\r\n        if (response.status === 200) {\r\n            let data = await response.json();\r\n            console.log(data);\r\n        } else if (response.status === 404) {\r\n            console.log('User not found: ' + user_id);\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":""}